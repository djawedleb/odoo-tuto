<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/tutorials/estate/models/estate_properties.py">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/tutorials/estate/models/estate_properties.py" />
              <option name="originalContent" value="from datetime import date, timedelta&#10;from odoo import models, fields&#10;&#10;class EstateProperty(models.Model):&#10;    _name = 'estate.property'&#10;    _description = &quot;Real Estate Property Model&quot;&#10;    &#10;    name = fields.Char(required=True, default=&quot;Unknown&quot;)&#10;    description = fields.Text()&#10;    postcode = fields.Char()&#10;    last_seen = fields.Datetime(&quot;Last Seen&quot;, default=fields.Datetime.now)&#10;    date_availability = fields.Date(copy=False, default=lambda self: date.today() + timedelta(days=90))&#10;    expected_price = fields.Float(required=True)&#10;    selling_price = fields.Float(readonly=True, copy=False)&#10;    bedrooms = fields.Integer(default=2)&#10;    living_area = fields.Integer()&#10;    facades = fields.Integer()&#10;    garage = fields.Boolean()&#10;    garden = fields.Boolean()&#10;    garden_area = fields.Integer()&#10;    garden_orientation = fields.Selection(&#10;        selection=[&#10;            ('north', 'North'),&#10;            ('south', 'South'),&#10;            ('east', 'East'),&#10;            ('west', 'West'),&#10;        ],&#10;        string=&quot;Garden Orientation&quot;&#10;    )&#10;    state = fields.Selection(&#10;        selection=[&#10;            ('new', 'New'),&#10;            ('offer_received', 'Offer Received'),&#10;            ('offer_accepted', 'Offer Accepted'),&#10;            ('sold', 'Sold'),&#10;        ],&#10;        default='new',&#10;        required=True,&#10;        copy=False,&#10;        string=&quot;Status&quot;&#10;    )&#10;    active = fields.Boolean(default=True)&#10;&#10;    property_type_id = fields.Many2one(&#10;        'estate.property.type',  # related model&#10;        string=&quot;Property Type&quot;&#10;    )&#10;" />
              <option name="updatedContent" value="from datetime import date, timedelta&#10;from odoo import models, fields&#10;&#10;class EstateProperty(models.Model):&#10;    _name = 'estate.property'&#10;    _description = &quot;Real Estate Property Model&quot;&#10;    &#10;    name = fields.Char(required=True, default=&quot;Unknown&quot;)&#10;    description = fields.Text()&#10;    postcode = fields.Char()&#10;    last_seen = fields.Datetime(&quot;Last Seen&quot;, default=fields.Datetime.now)&#10;    date_availability = fields.Date(copy=False, default=lambda self: date.today() + timedelta(days=90))&#10;    expected_price = fields.Float(required=True)&#10;    selling_price = fields.Float(readonly=True, copy=False)&#10;    bedrooms = fields.Integer(default=2)&#10;    living_area = fields.Integer()&#10;    facades = fields.Integer()&#10;    garage = fields.Boolean()&#10;    garden = fields.Boolean()&#10;    garden_area = fields.Integer()&#10;    garden_orientation = fields.Selection([&#10;        ('north', 'North'),&#10;        ('south', 'South'),&#10;        ('east', 'East'),&#10;        ('west', 'West')&#10;    ], string=&quot;Garden Orientation&quot;)&#10;&#10;    state = fields.Selection([&#10;        ('new', 'New'),&#10;        ('offer_received', 'Offer Received'),&#10;        ('offer_accepted', 'Offer Accepted'),&#10;        ('sold', 'Sold')&#10;    ], default='new', required=True, copy=False, string=&quot;Status&quot;)&#10;    &#10;    active = fields.Boolean(default=True)&#10;&#10;    property_type_id = fields.Many2one('estate.property.type', string=&quot;Property Type&quot;)" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/tutorials/estate/models/estate_properties_type.py">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/tutorials/estate/models/estate_properties_type.py" />
              <option name="originalContent" value="from odoo import models, fields&#10;&#10;class EstatePropertyType(models.Model):&#10;    _name = 'estate.property.type'&#10;    _description = &quot;Real Estate Property Type&quot;&#10;&#10;    name = fields.Char(required=True)&#10;    property_ids = fields.One2many(&#10;        'estate.property',  # related model&#10;        'property_type_id',  # field in estate.property&#10;        string=&quot;Properties&quot;&#10;    )" />
              <option name="updatedContent" value="from odoo import models, fields&#10;&#10;class EstatePropertyType(models.Model):&#10;    _name = 'estate.property.type'&#10;    _description = &quot;Real Estate Property Type&quot;&#10;&#10;    name = fields.Char(required=True)&#10;    property_ids = fields.One2many(&#10;        'estate.property',  # related model&#10;        'property_type_id',  # field in estate.property&#10;        string=&quot;Properties&quot;,&#10;    )" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/tutorials/estate/models/estate_property.py">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/tutorials/estate/models/estate_property.py" />
              <option name="originalContent" value="from datetime import date, timedelta&#10;from odoo import api,models, fields&#10;from odoo.exceptions import UserError&#10;from odoo.tools.populate import compute&#10;&#10;&#10;class EstateProperty(models.Model):&#10;    _name = 'estate.property'&#10;    _description = &quot;Real Estate Property Model&quot;&#10;&#10;    name = fields.Char(required=True, default=&quot;Unknown&quot;)&#10;    user_id = fields.Many2one('res.users', string='Salesperson',&#10;                              default=lambda self: self.env.user)&#10;    buyer_id = fields.Many2one(&#10;        &quot;res.partner&quot;,&#10;        string=&quot;Buyer&quot;,&#10;        copy=False&#10;    )&#10;&#10;    description = fields.Text()&#10;    postcode = fields.Char()&#10;    last_seen = fields.Datetime(&quot;Last Seen&quot;, default=fields.Datetime.now)&#10;    date_availability = fields.Date(copy=False, default=lambda self: date.today() + timedelta(days=90))&#10;    expected_price = fields.Float(required=True)&#10;    selling_price = fields.Float(readonly=True, copy=False)&#10;    bedrooms = fields.Integer(default=2)&#10;    living_area = fields.Integer()&#10;    facades = fields.Integer()&#10;    garage = fields.Boolean()&#10;    garden = fields.Boolean()&#10;    garden_area = fields.Integer()&#10;    garden_orientation = fields.Selection([&#10;        ('north', 'North'),&#10;        ('south', 'South'),&#10;        ('east', 'East'),&#10;        ('west', 'West')&#10;    ], string=&quot;Garden Orientation&quot;)&#10;&#10;    state = fields.Selection([&#10;        ('new', 'New'),&#10;        ('offer_received', 'Offer Received'),&#10;        ('offer_accepted', 'Offer Accepted'),&#10;        ('sold', 'Sold'),&#10;        ('canceled', 'Canceled')&#10;    ], required=True, copy=False, string=&quot;Status&quot;)&#10;&#10;    active = fields.Boolean(default=True)&#10;    # This means: Many properties can share the same property type.&#10;    property_type_id = fields.Many2one('estate.property.type', string=&quot;Property Type&quot;)&#10;&#10;    # A property can have many tags and a tag can be assigned to many properties. This is supported by the many2many concept.&#10;    tag_ids = fields.Many2many(&#10;        'estate.property.tag', )&#10;&#10;    offer_ids= fields.One2many('estate.property.offer', 'property_id', string=&quot;Offers&quot;)&#10;&#10;    total_area = fields.Float(&#10;        compute='_compute_total_area',&#10;        store=True,&#10;    )&#10;    @api.depends(&quot;living_area&quot;, &quot;garden_area&quot;)&#10;    def _compute_total_area(self):&#10;        for record in self:&#10;            record.total_area = record.living_area + record.garden_area&#10;&#10;&#10;    best_price = fields.Float(&#10;        compute=&quot;_compute_best_price&quot;,&#10;        store=True,&#10;        string=&quot;Best Price&quot;&#10;    )&#10;    @api.depends(&quot;offer_ids.price&quot;)&#10;    def _compute_best_price(self):&#10;        for record in self:&#10;            if record.offer_ids:&#10;                record.best_price = max(record.offer_ids.mapped(&quot;price&quot;))&#10;            else:&#10;                record.best_price = 0.0&#10;&#10;&#10;    @api.onchange('garden_area','garden_orientation','garden')&#10;    def _onchange_garden_area(self):&#10;        for record in self:&#10;            if record.garden:&#10;                record.garden_area = 10&#10;                record.garden_orientation = 'north'&#10;            else:&#10;                record.garden_area = 0&#10;                record.garden_orientation = False&#10;&#10;    def cancel_property(self):&#10;        for record in self:&#10;            record.state = 'canceled'&#10;        return True&#10;&#10;    def sold_property(self):&#10;        for record in self:&#10;            if record.state == 'canceled':&#10;                raise UserError(&quot;You cannot sell a canceled property.&quot;)&#10;            record.state = 'sold'&#10;        return True&#10;" />
              <option name="updatedContent" value="from datetime import date, timedelta&#10;from odoo import api,models, fields&#10;from odoo.exceptions import UserError&#10;from odoo.tools.populate import compute&#10;&#10;&#10;class EstateProperty(models.Model):&#10;    _name = 'estate.property'&#10;    _description = &quot;Real Estate Property Model&quot;&#10;&#10;    name = fields.Char(required=True, default=&quot;Unknown&quot;)&#10;    user_id = fields.Many2one('res.users', string='Salesperson',&#10;                              default=lambda self: self.env.user)&#10;    buyer_id = fields.Many2one(&#10;        &quot;res.partner&quot;,&#10;        string=&quot;Buyer&quot;,&#10;        copy=False&#10;    )&#10;&#10;    description = fields.Text()&#10;    postcode = fields.Char()&#10;    last_seen = fields.Datetime(&quot;Last Seen&quot;, default=fields.Datetime.now)&#10;    date_availability = fields.Date(copy=False, default=lambda self: date.today() + timedelta(days=90))&#10;    expected_price = fields.Float(required=True)&#10;    selling_price = fields.Float(readonly=True, copy=False)&#10;    bedrooms = fields.Integer(default=2)&#10;    living_area = fields.Integer()&#10;    facades = fields.Integer()&#10;    garage = fields.Boolean()&#10;    garden = fields.Boolean()&#10;    garden_area = fields.Integer()&#10;    garden_orientation = fields.Selection([&#10;        ('north', 'North'),&#10;        ('south', 'South'),&#10;        ('east', 'East'),&#10;        ('west', 'West')&#10;    ], string=&quot;Garden Orientation&quot;)&#10;&#10;    state = fields.Selection([&#10;        ('new', 'New'),&#10;        ('offer_received', 'Offer Received'),&#10;        ('offer_accepted', 'Offer Accepted'),&#10;        ('sold', 'Sold'),&#10;        ('canceled', 'Canceled')&#10;    ], required=True, copy=False, string=&quot;Status&quot;)&#10;&#10;    active = fields.Boolean(default=True)&#10;    # This means: Many properties can share the same property type.&#10;    property_type_id = fields.Many2one('estate.property.type', string=&quot;Property Type&quot;)&#10;&#10;    # A property can have many tags and a tag can be assigned to many properties. This is supported by the many2many concept.&#10;    tag_ids = fields.Many2many(&#10;        'estate.property.tag', )&#10;&#10;    offer_ids= fields.One2many('estate.property.offer', 'property_id', string=&quot;Offers&quot;)&#10;&#10;    total_area = fields.Float(&#10;        compute='_compute_total_area',&#10;        store=True,&#10;    )&#10;    @api.depends(&quot;living_area&quot;, &quot;garden_area&quot;)&#10;    def _compute_total_area(self):&#10;        for record in self:&#10;            record.total_area = record.living_area + record.garden_area&#10;&#10;&#10;    best_price = fields.Float(&#10;        compute=&quot;_compute_best_price&quot;,&#10;        store=True,&#10;        string=&quot;Best Price&quot;&#10;    )&#10;    @api.depends(&quot;offer_ids.price&quot;)&#10;    def _compute_best_price(self):&#10;        for record in self:&#10;            if record.offer_ids:&#10;                record.best_price = max(record.offer_ids.mapped(&quot;price&quot;))&#10;            else:&#10;                record.best_price = 0.0&#10;&#10;&#10;    @api.onchange('garden_area','garden_orientation','garden')&#10;    def _onchange_garden_area(self):&#10;        for record in self:&#10;            if record.garden:&#10;                record.garden_area = 10&#10;                record.garden_orientation = 'north'&#10;            else:&#10;                record.garden_area = 0&#10;                record.garden_orientation = False&#10;&#10;    def cancel_property(self):&#10;        for record in self:&#10;            record.state = 'canceled'&#10;        return True&#10;&#10;    def sold_property(self):&#10;        for record in self:&#10;            if record.state == 'canceled':&#10;                raise UserError(&quot;You cannot sell a canceled property.&quot;)&#10;            record.state = 'sold'&#10;        return True&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/tutorials/estate/models/estate_property_offer.py">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/tutorials/estate/models/estate_property_offer.py" />
              <option name="originalContent" value="from datetime import timedelta&#10;&#10;from odoo import api,models, fields&#10;&#10;&#10;&#10;class EstatePropertyOffer(models.Model):&#10;    _name = 'estate.property.offer'&#10;    _description = &quot;Real Estate Property Offer&quot;&#10;&#10;    price = fields.Float(required=True)&#10;    status = fields.Selection([&#10;        ('accepted', 'Accepted'),&#10;        ('refused', 'Refused'),&#10;    ], required=True)&#10;    partner_id = fields.Many2one('res.partner', string='Partner', required=True)&#10;    property_id = fields.Many2one('estate.property', string='Property',   required=True)&#10;&#10;    validity = fields.Integer(default=7,)&#10;    date_deadline = fields.Date(&#10;        compute='_compute_date_deadline',&#10;        inverse='_compute_inverse_date_deadline',&#10;        store=True,&#10;        string=&quot;Deadline&quot;&#10;    )&#10;&#10;    @api.depends('validity')&#10;    def _compute_date_deadline(self):&#10;        for record in self:&#10;            record.date_deadline = (fields.Datetime.now() + timedelta(days=record.validity)).date()&#10;&#10;    def _compute_inverse_date_deadline(self):&#10;        for record in self:&#10;            if record.date_deadline:&#10;                record.validity = (record.date_deadline - fields.Datetime.now().date()).days&#10;&#10;&#10;    def accept_offer(self):&#10;        for record in self:&#10;            accepted_buyer = record.mapped('status')&#10;            if  'accepted' in accepted_buyer:&#10;                raise ValueError(&quot;This offer has already been accepted.&quot;)&#10;            else:&#10;                record.status = 'accepted'&#10;                record.property_id.buyer_id = record.partner_id&#10;                record.property_id.selling_price = record.price&#10;        return True&#10;&#10;    def refuse_offer(self):&#10;        for record in self:&#10;            record.status = 'refused'&#10;        return True&#10;" />
              <option name="updatedContent" value="from datetime import timedelta&#10;&#10;from odoo import api,models, fields&#10;&#10;&#10;&#10;class EstatePropertyOffer(models.Model):&#10;    _name = 'estate.property.offer'&#10;    _description = &quot;Real Estate Property Offer&quot;&#10;&#10;    price = fields.Float(required=True)&#10;    status = fields.Selection([&#10;        ('draft', 'New'),&#10;        ('accepted', 'Accepted'),&#10;        ('refused', 'Refused'),&#10;    ], required=True, default='draft', copy=False)&#10;    partner_id = fields.Many2one('res.partner', string='Partner', required=True)&#10;    property_id = fields.Many2one('estate.property', string='Property',   required=True)&#10;&#10;    validity = fields.Integer(default=7,)&#10;    date_deadline = fields.Date(&#10;        compute='_compute_date_deadline',&#10;        inverse='_compute_inverse_date_deadline',&#10;        store=True,&#10;        string=&quot;Deadline&quot;&#10;    )&#10;&#10;    @api.depends('validity')&#10;    def _compute_date_deadline(self):&#10;        for record in self:&#10;            record.date_deadline = (fields.Datetime.now() + timedelta(days=record.validity)).date()&#10;&#10;    def _compute_inverse_date_deadline(self):&#10;        for record in self:&#10;            if record.date_deadline:&#10;                record.validity = (record.date_deadline - fields.Datetime.now().date()).days&#10;&#10;&#10;    def accept_offer(self):&#10;        for record in self:&#10;            accepted_buyer = record.mapped('status')&#10;            if  'accepted' in accepted_buyer:&#10;                raise ValueError(&quot;This offer has already been accepted.&quot;)&#10;            else:&#10;                record.status = 'accepted'&#10;                record.property_id.buyer_id = record.partner_id&#10;                record.property_id.selling_price = record.price&#10;        return True&#10;&#10;    def refuse_offer(self):&#10;        for record in self:&#10;            record.status = 'refused'&#10;        return True" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/tutorials/estate/models/estate_property_tag.py">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/tutorials/estate/models/estate_property_tag.py" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/tutorials/estate/views/estate_property_views.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/tutorials/estate/views/estate_property_views.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot;?&gt;&#10;&lt;odoo&gt;&#10;&#10;    &lt;!--list view--&gt;&#10;    &lt;record id=&quot;view_yourmodel_tree&quot; model=&quot;ir.ui.view&quot;&gt;&#10;    &lt;field name=&quot;name&quot;&gt;estate.property.list&lt;/field&gt;&#10;    &lt;field name=&quot;model&quot;&gt;estate.property&lt;/field&gt;&#10;    &lt;field name=&quot;arch&quot; type=&quot;xml&quot;&gt;&#10;            &lt;tree&gt;&#10;                &lt;field name=&quot;name&quot;/&gt;&#10;                &lt;field name=&quot;postcode&quot;/&gt;&#10;                &lt;field name=&quot;bedrooms&quot;/&gt;&#10;                &lt;field name=&quot;living_area&quot;/&gt;&#10;                &lt;field name=&quot;expected_price&quot;/&gt;&#10;                &lt;field name=&quot;selling_price&quot;/&gt;&#10;                &lt;field name=&quot;date_availability&quot;/&gt;&#10;            &lt;/tree&gt;&#10;        &lt;/field&gt;&#10;    &lt;/record&gt;&#10;&#10;    &lt;!-- Form view   --&gt;&#10;    &lt;record id=&quot;view_yourmodel_form&quot; model=&quot;ir.ui.view&quot;&gt;&#10;    &lt;field name=&quot;name&quot;&gt;estate.property.form&lt;/field&gt;&#10;    &lt;field name=&quot;model&quot;&gt;estate.property&lt;/field&gt;&#10;    &lt;field name=&quot;arch&quot; type=&quot;xml&quot;&gt;&#10;            &lt;form string=&quot;Test&quot;&gt;&#10;                &lt;header&gt;&#10;                    &lt;button name=&quot;sold_property&quot; type=&quot;object&quot; string=&quot;Sold&quot; class=&quot;oe_highlight&quot;/&gt;&#10;                    &lt;button name=&quot;cancel_property&quot; type=&quot;object&quot; string=&quot;Cancel&quot; class=&quot;oe_link&quot;/&gt;&#10;                &lt;/header&gt;&#10;            &lt;sheet&gt;&#10;                &lt;group&gt;&#10;                    &lt;h1&gt;&#10;                        &lt;field name=&quot;name&quot; placeholder=&quot;Property Name&quot;/&gt;&#10;                    &lt;/h1&gt;&#10;&#10;                     &lt;group&gt;&#10;                        &lt;field name=&quot;expected_price&quot;/&gt;&#10;                         &lt;field name=&quot;selling_price&quot;/&gt;&#10;                         &lt;field name=&quot;best_price&quot;/&gt;&#10;                     &lt;/group&gt;&#10;                    &lt;group&gt;&#10;                        &lt;field name=&quot;state&quot; /&gt;&#10;                        &lt;field name=&quot;tag_ids&quot; widget=&quot;many2many_tags&quot;/&gt;&#10;                        &lt;field name=&quot;property_type_id&quot;/&gt;&#10;                        &lt;field name=&quot;postcode&quot;/&gt;&#10;                        &lt;field name=&quot;date_availability&quot;/&gt;&#10;                    &lt;/group&gt;&#10;                 &lt;/group&gt;&#10;                &lt;notebook&gt;&#10;                    &lt;page string=&quot;Description&quot;&gt;&#10;                        &lt;group&gt;&#10;                            &lt;field name=&quot;description&quot;/&gt;&#10;                        &lt;/group&gt;&#10;                        &lt;group&gt;&#10;                            &lt;field name=&quot;bedrooms&quot;/&gt;&#10;                            &lt;field name=&quot;living_area&quot;/&gt;&#10;                             &lt;field name=&quot;facades&quot;/&gt;&#10;                        &lt;/group&gt;&#10;                        &lt;group&gt;&#10;                            &lt;field name=&quot;garden_orientation&quot;/&gt;&#10;                            &lt;field name=&quot;garage&quot;/&gt;&#10;                            &lt;field name=&quot;garden&quot;/&gt;&#10;                            &lt;field name=&quot;garden_area&quot;/&gt;&#10;                            &lt;field name=&quot;total_area&quot;/&gt;&#10;                        &lt;/group&gt;&#10;                    &lt;/page&gt;&#10;                    &lt;page string=&quot;Offers&quot;&gt;&#10;                        &lt;group&gt;&#10;                           &lt;field name=&quot;offer_ids&quot;&gt;&#10;                                &lt;tree string=&quot;Offers&quot;&gt;&#10;                                    &lt;field name=&quot;price&quot;/&gt;&#10;                                    &lt;field name=&quot;partner_id&quot;/&gt;&#10;                                    &lt;field name=&quot;validity&quot;/&gt;&#10;                                    &lt;field name=&quot;date_deadline&quot;/&gt;&#10;                                    &lt;field name=&quot;status&quot;/&gt;&#10;                                    &lt;button name=&quot;accept_offer&quot; string=&quot;Confirm&quot; states=&quot;draft&quot; type=&quot;object&quot; icon=&quot;fa-check&quot;/&gt;&#10;                                    &lt;button name=&quot;refuse_offer&quot; string=&quot;Mark as Attending&quot; states=&quot;open&quot; type=&quot;object&quot; icon=&quot;fa-level-down&quot;/&gt;&#10;                                &lt;/tree&gt;&#10;                            &lt;/field&gt;&#10;                        &lt;/group&gt;&#10;                    &lt;/page&gt;&#10;                    &lt;page string=&quot;otherInfo&quot;&gt;&#10;                        &lt;group&gt;&#10;                            &lt;field name=&quot;user_id&quot;/&gt;&#10;                            &lt;field name=&quot;buyer_id&quot;/&gt;&#10;                        &lt;/group&gt;&#10;                    &lt;/page&gt;&#10;&#10;                &lt;/notebook&gt;&#10;&#10;            &lt;/sheet&gt;&#10;            &lt;/form&gt;&#10;        &lt;/field&gt;&#10;    &lt;/record&gt;&#10;&#10;&#10;    &lt;!--    Search view--&gt;&#10;    &lt;record id=&quot;view_yourmodel_search&quot; model=&quot;ir.ui.view&quot;&gt;&#10;    &lt;field name=&quot;name&quot;&gt;estate.property.search&lt;/field&gt;&#10;    &lt;field name=&quot;model&quot;&gt;estate.property&lt;/field&gt;&#10;    &lt;field name=&quot;arch&quot; type=&quot;xml&quot;&gt;&#10;        &lt;search&gt;&#10;            &lt;field name=&quot;name&quot;/&gt;&#10;            &lt;field name=&quot;postcode&quot;/&gt;&#10;            &lt;field name=&quot;bedrooms&quot;/&gt;&#10;            &lt;field name=&quot;living_area&quot;/&gt;&#10;            &lt;field name=&quot;expected_price&quot;/&gt;&#10;            &lt;filter name=&quot;available&quot; string=&quot;inactive&quot; domain=&quot;[('active','=','False')]&quot;/&gt;&#10;            &lt;group expand=&quot;0&quot; string=&quot;Group By&quot;&gt;&#10;                &lt;filter name=&quot;postcode&quot; string=&quot;PostCode&quot; context=&quot;{'group_by':'postcode'}&quot;/&gt;&#10;            &lt;/group&gt;&#10;        &lt;/search&gt;&#10;        &lt;/field&gt;&#10;    &lt;/record&gt;&#10;    &lt;!--Actions--&gt;&#10;    &lt;record id=&quot;action_estate_property&quot; model=&quot;ir.actions.act_window&quot;&gt;&#10;        &lt;field name=&quot;name&quot;&gt;Estate Properties&lt;/field&gt;&#10;        &lt;field name=&quot;res_model&quot;&gt;estate.property&lt;/field&gt;&#10;        &lt;field name=&quot;view_mode&quot;&gt;tree,form&lt;/field&gt;&#10;         &lt;field name=&quot;help&quot; type=&quot;html&quot;&gt;&#10;          &lt;p class=&quot;o_view_nocontent_smiling_face&quot;&gt;&#10;            Define a new lost reason&#10;          &lt;/p&gt;&lt;p&gt;&#10;            Use lost reasons to explain why an opportunity is lost.&#10;          &lt;/p&gt;&lt;p&gt;&#10;            Some examples of lost reasons: &quot;We don't have people/skill&quot;, &quot;Price too high&quot;&#10;          &lt;/p&gt;&#10;        &lt;/field&gt;&#10;    &lt;/record&gt;&#10;&#10;    &lt;!-- Menus --&gt;&#10;   &lt;menuitem id=&quot;estate_menu_root&quot;&#10;          name=&quot;Real Estate&quot;&#10;          sequence=&quot;10&quot;/&gt;&#10;&#10;&lt;!-- Advertisements --&gt;&#10;&lt;menuitem id=&quot;estate_menu_advertisements&quot;&#10;          name=&quot;Advertisements&quot;&#10;          parent=&quot;estate_menu_root&quot;&#10;          sequence=&quot;10&quot;/&gt;&#10;&#10;&lt;menuitem id=&quot;estate_menu_estate_property&quot;&#10;          name=&quot;Estate Properties&quot;&#10;          parent=&quot;estate_menu_advertisements&quot;&#10;          action=&quot;action_estate_property&quot;&#10;          sequence=&quot;10&quot;/&gt;&#10;&#10;&#10;&#10;&lt;/odoo&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot;?&gt;&#10;&lt;odoo&gt;&#10;&#10;    &lt;!--list view--&gt;&#10;    &lt;record id=&quot;view_yourmodel_tree&quot; model=&quot;ir.ui.view&quot;&gt;&#10;    &lt;field name=&quot;name&quot;&gt;estate.property.list&lt;/field&gt;&#10;    &lt;field name=&quot;model&quot;&gt;estate.property&lt;/field&gt;&#10;    &lt;field name=&quot;arch&quot; type=&quot;xml&quot;&gt;&#10;            &lt;tree&gt;&#10;                &lt;field name=&quot;name&quot;/&gt;&#10;                &lt;field name=&quot;postcode&quot;/&gt;&#10;                &lt;field name=&quot;bedrooms&quot;/&gt;&#10;                &lt;field name=&quot;living_area&quot;/&gt;&#10;                &lt;field name=&quot;expected_price&quot;/&gt;&#10;                &lt;field name=&quot;selling_price&quot;/&gt;&#10;                &lt;field name=&quot;date_availability&quot;/&gt;&#10;            &lt;/tree&gt;&#10;        &lt;/field&gt;&#10;    &lt;/record&gt;&#10;&#10;    &lt;!-- Form view   --&gt;&#10;    &lt;record id=&quot;view_yourmodel_form&quot; model=&quot;ir.ui.view&quot;&gt;&#10;    &lt;field name=&quot;name&quot;&gt;estate.property.form&lt;/field&gt;&#10;    &lt;field name=&quot;model&quot;&gt;estate.property&lt;/field&gt;&#10;    &lt;field name=&quot;arch&quot; type=&quot;xml&quot;&gt;&#10;            &lt;form string=&quot;Test&quot;&gt;&#10;                &lt;header&gt;&#10;                    &lt;button name=&quot;sold_property&quot; type=&quot;object&quot; string=&quot;Sold&quot; class=&quot;oe_highlight&quot;/&gt;&#10;                    &lt;button name=&quot;cancel_property&quot; type=&quot;object&quot; string=&quot;Cancel&quot; class=&quot;oe_link&quot;/&gt;&#10;                &lt;/header&gt;&#10;            &lt;sheet&gt;&#10;                &lt;group&gt;&#10;                    &lt;h1&gt;&#10;                        &lt;field name=&quot;name&quot; placeholder=&quot;Property Name&quot;/&gt;&#10;                    &lt;/h1&gt;&#10;&#10;                     &lt;group&gt;&#10;                        &lt;field name=&quot;expected_price&quot;/&gt;&#10;                         &lt;field name=&quot;selling_price&quot;/&gt;&#10;                         &lt;field name=&quot;best_price&quot;/&gt;&#10;                     &lt;/group&gt;&#10;                    &lt;group&gt;&#10;                        &lt;field name=&quot;state&quot; /&gt;&#10;                        &lt;field name=&quot;tag_ids&quot; widget=&quot;many2many_tags&quot;/&gt;&#10;                        &lt;field name=&quot;property_type_id&quot;/&gt;&#10;                        &lt;field name=&quot;postcode&quot;/&gt;&#10;                        &lt;field name=&quot;date_availability&quot;/&gt;&#10;                    &lt;/group&gt;&#10;                 &lt;/group&gt;&#10;                &lt;notebook&gt;&#10;                    &lt;page string=&quot;Description&quot;&gt;&#10;                        &lt;group&gt;&#10;                            &lt;field name=&quot;description&quot;/&gt;&#10;                        &lt;/group&gt;&#10;                        &lt;group&gt;&#10;                            &lt;field name=&quot;bedrooms&quot;/&gt;&#10;                            &lt;field name=&quot;living_area&quot;/&gt;&#10;                             &lt;field name=&quot;facades&quot;/&gt;&#10;                        &lt;/group&gt;&#10;                        &lt;group&gt;&#10;                            &lt;field name=&quot;garden_orientation&quot;/&gt;&#10;                            &lt;field name=&quot;garage&quot;/&gt;&#10;                            &lt;field name=&quot;garden&quot;/&gt;&#10;                            &lt;field name=&quot;garden_area&quot;/&gt;&#10;                            &lt;field name=&quot;total_area&quot;/&gt;&#10;                        &lt;/group&gt;&#10;                    &lt;/page&gt;&#10;                    &lt;page string=&quot;Offers&quot;&gt;&#10;                        &lt;group&gt;&#10;                           &lt;field name=&quot;offer_ids&quot;&gt;&#10;                                &lt;tree string=&quot;Offers&quot;&gt;&#10;                                    &lt;field name=&quot;price&quot;/&gt;&#10;                                    &lt;field name=&quot;partner_id&quot;/&gt;&#10;                                    &lt;field name=&quot;validity&quot;/&gt;&#10;                                    &lt;field name=&quot;date_deadline&quot;/&gt;&#10;                                    &lt;field name=&quot;status&quot;/&gt;&#10;                                    &lt;button name=&quot;accept_offer&quot; string=&quot;Accept&quot; type=&quot;object&quot; icon=&quot;fa-check&quot; states=&quot;draft&quot;/&gt;&#10;                                    &lt;button name=&quot;refuse_offer&quot; string=&quot;Refuse&quot; type=&quot;object&quot; icon=&quot;fa-times&quot; states=&quot;draft&quot;/&gt;&#10;                                &lt;/tree&gt;&#10;                            &lt;/field&gt;&#10;                        &lt;/group&gt;&#10;                    &lt;/page&gt;&#10;                    &lt;page string=&quot;otherInfo&quot;&gt;&#10;                        &lt;group&gt;&#10;                            &lt;field name=&quot;user_id&quot;/&gt;&#10;                            &lt;field name=&quot;buyer_id&quot;/&gt;&#10;                        &lt;/group&gt;&#10;                    &lt;/page&gt;&#10;&#10;                &lt;/notebook&gt;&#10;&#10;            &lt;/sheet&gt;&#10;            &lt;/form&gt;&#10;        &lt;/field&gt;&#10;    &lt;/record&gt;&#10;&#10;&#10;    &lt;!--    Search view--&gt;&#10;    &lt;record id=&quot;view_yourmodel_search&quot; model=&quot;ir.ui.view&quot;&gt;&#10;    &lt;field name=&quot;name&quot;&gt;estate.property.search&lt;/field&gt;&#10;    &lt;field name=&quot;model&quot;&gt;estate.property&lt;/field&gt;&#10;    &lt;field name=&quot;arch&quot; type=&quot;xml&quot;&gt;&#10;        &lt;search&gt;&#10;            &lt;field name=&quot;name&quot;/&gt;&#10;            &lt;field name=&quot;postcode&quot;/&gt;&#10;            &lt;field name=&quot;bedrooms&quot;/&gt;&#10;            &lt;field name=&quot;living_area&quot;/&gt;&#10;            &lt;field name=&quot;expected_price&quot;/&gt;&#10;            &lt;filter name=&quot;available&quot; string=&quot;inactive&quot; domain=&quot;[('active','=','False')]&quot;/&gt;&#10;            &lt;group expand=&quot;0&quot; string=&quot;Group By&quot;&gt;&#10;                &lt;filter name=&quot;postcode&quot; string=&quot;PostCode&quot; context=&quot;{'group_by':'postcode'}&quot;/&gt;&#10;            &lt;/group&gt;&#10;        &lt;/search&gt;&#10;        &lt;/field&gt;&#10;    &lt;/record&gt;&#10;    &lt;!--Actions--&gt;&#10;    &lt;record id=&quot;action_estate_property&quot; model=&quot;ir.actions.act_window&quot;&gt;&#10;        &lt;field name=&quot;name&quot;&gt;Estate Properties&lt;/field&gt;&#10;        &lt;field name=&quot;res_model&quot;&gt;estate.property&lt;/field&gt;&#10;        &lt;field name=&quot;view_mode&quot;&gt;tree,form&lt;/field&gt;&#10;         &lt;field name=&quot;help&quot; type=&quot;html&quot;&gt;&#10;          &lt;p class=&quot;o_view_nocontent_smiling_face&quot;&gt;&#10;            Define a new lost reason&#10;          &lt;/p&gt;&lt;p&gt;&#10;            Use lost reasons to explain why an opportunity is lost.&#10;          &lt;/p&gt;&lt;p&gt;&#10;            Some examples of lost reasons: &quot;We don't have people/skill&quot;, &quot;Price too high&quot;&#10;          &lt;/p&gt;&#10;        &lt;/field&gt;&#10;    &lt;/record&gt;&#10;&#10;    &lt;!-- Menus --&gt;&#10;   &lt;menuitem id=&quot;estate_menu_root&quot;&#10;          name=&quot;Real Estate&quot;&#10;          sequence=&quot;10&quot;/&gt;&#10;&#10;&lt;!-- Advertisements --&gt;&#10;&lt;menuitem id=&quot;estate_menu_advertisements&quot;&#10;          name=&quot;Advertisements&quot;&#10;          parent=&quot;estate_menu_root&quot;&#10;          sequence=&quot;10&quot;/&gt;&#10;&#10;&lt;menuitem id=&quot;estate_menu_estate_property&quot;&#10;          name=&quot;Estate Properties&quot;&#10;          parent=&quot;estate_menu_advertisements&quot;&#10;          action=&quot;action_estate_property&quot;&#10;          sequence=&quot;10&quot;/&gt;&#10;&#10;&#10;&#10;&lt;/odoo&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>